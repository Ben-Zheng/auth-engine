// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/auth-engine/internal/pkg/dao"
	"github.com/auth-engine/internal/pkg/global"
	"github.com/auth-engine/internal/pkg/global/servers"
	"github.com/auth-engine/internal/pkg/routers/ctrl"
	"github.com/auth-engine/internal/pkg/routers/routeinit"
	"github.com/auth-engine/internal/pkg/services"
	"github.com/google/wire"
)

import (
	_ "github.com/auth-engine/docs"
)

// Injectors from wrie.go:

func InitProject() (*servers.WebServer, error) {
	appConfig, err := global.ConfigInit()
	if err != nil {
		return nil, err
	}
	typesInterface, err := global.GhippoAuthInit(appConfig)
	if err != nil {
		return nil, err
	}
	serverOpt, err := global.ServerOptInit(appConfig)
	if err != nil {
		return nil, err
	}
	hertz := global.WebHertzInit(serverOpt)
	swaggerCtrl := ctrl.NewSwaggerCtrl(hertz)
	db, err := global.DBInit(appConfig)
	if err != nil {
		return nil, err
	}
	iTokenDao := dao.NewTokenDao(db)
	iTokenValidityPolicyDao := dao.NewTokenValidityPolicyDao(db)
	iTokenService := services.NewTokenService(iTokenDao, iTokenValidityPolicyDao)
	tokenHandler := ctrl.NewTokenHandler(iTokenService, appConfig, hertz)
	iClientService := services.NewClientService(appConfig, typesInterface)
	workspaceHandler := ctrl.NewWorkspaceHandler(iClientService, hertz)
	routeInit := routeinit.NewInit(swaggerCtrl, tokenHandler, workspaceHandler)
	webServer, err := global.WebServerInit(appConfig, typesInterface, routeInit, hertz)
	if err != nil {
		return nil, err
	}
	return webServer, nil
}

// wrie.go:

var initSet = wire.NewSet(global.ConfigInit, global.LogInit, global.DBInit, global.GhippoAuthInit, global.ServerOptInit, global.WebHertzInit, global.WebServerInit, routeinit.NewInit)

var controllerSet = wire.NewSet(ctrl.NewSwaggerCtrl, ctrl.NewTokenHandler, ctrl.NewWorkspaceHandler)

var serviceSet = wire.NewSet(services.NewClientService, services.NewTokenService)

var daoSet = wire.NewSet(dao.NewTokenDao, dao.NewTokenValidityPolicyDao)
